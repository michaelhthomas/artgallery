// This file is auto-generated by @hey-api/openapi-ts

export const $AuthRequest = {
    type: 'object',
    description: 'API Login and Authorization Request',
    properties: {
        username: {
            type: 'string',
            description: 'Username',
            example: 'admin',
            minLength: 1
        },
        password: {
            type: 'string',
            description: 'Password',
            example: 'admin123',
            maxLength: 2147483647,
            minLength: 6
        }
    },
    required: ['password', 'username']
} as const;

export const $AuthResponse = {
    type: 'object',
    properties: {
        token: {
            type: 'string',
            description: 'JWT Authorization Token',
            example: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiJhYmNkMTIzIiwiZXhwaXJ5IjoxNjQ2NjM1NjExMzAxfQ.3Thp81rDFrKXr3WrY1MyMnNK8kKoZBX9lg-JwFznR-M'
        },
        username: {
            type: 'string',
            description: 'Username',
            example: 'admin'
        },
        email: {
            type: 'string',
            description: 'Email address',
            example: 'admin@furman.edu'
        },
        firstName: {
            type: 'string',
            description: 'First name',
            example: 'John'
        },
        lastName: {
            type: 'string',
            description: 'Last name',
            example: 'Doe'
        }
    },
    required: ['email', 'firstName', 'lastName', 'token', 'username']
} as const;

export const $ArtistCreateRequest = {
    type: 'object',
    description: 'Artist Creation Request',
    properties: {
        firstName: {
            type: 'string',
            description: 'First name',
            example: 'Bob',
            minLength: 1
        },
        lastName: {
            type: 'string',
            description: 'Last name',
            example: 'Smith',
            minLength: 1
        },
        interviewDate: {
            type: 'string',
            format: 'date',
            description: 'Date of interview',
            example: '2023-01-01'
        },
        interviewerName: {
            type: 'string',
            description: 'Interviewer name',
            example: 'Kevin Treu'
        },
        areaCode: {
            type: 'string',
            description: 'Area code',
            example: 123
        },
        telephoneNumber: {
            type: 'string',
            description: 'Telephone number',
            example: 1234567
        },
        street: {
            type: 'string',
            description: 'Street address',
            example: 123
        },
        city: {
            type: 'string',
            description: 'City',
            example: 'Anytown'
        },
        state: {
            type: 'string',
            description: 'State',
            example: 'CA'
        },
        zipCode: {
            type: 'string',
            description: 'Zip code',
            example: 12345
        },
        socialSecurityNumber: {
            type: 'string',
            description: 'Social security number',
            example: '123-45-6789'
        },
        usualMedium: {
            type: 'string',
            description: 'Usual medium',
            example: 'Oil'
        },
        usualStyle: {
            type: 'string',
            description: 'Usual style',
            example: 'Abstract'
        },
        usualType: {
            type: 'string',
            description: 'Usual type',
            example: 'Painting'
        }
    },
    required: ['firstName', 'lastName']
} as const;

export const $Artist = {
    type: 'object',
    properties: {
        artistId: {
            type: 'integer',
            format: 'int32'
        },
        firstName: {
            type: 'string'
        },
        lastName: {
            type: 'string'
        },
        interviewDate: {
            type: 'string',
            format: 'date'
        },
        interviewerName: {
            type: 'string'
        },
        areaCode: {
            type: 'string'
        },
        telephoneNumber: {
            type: 'string'
        },
        street: {
            type: 'string'
        },
        zip: {
            '$ref': '#/components/schemas/Zip'
        },
        salesLastYear: {
            type: 'number'
        },
        salesYearToDate: {
            type: 'number'
        },
        socialSecurityNumber: {
            type: 'string'
        },
        usualMedium: {
            type: 'string'
        },
        usualStyle: {
            type: 'string'
        },
        usualType: {
            type: 'string'
        }
    },
    required: ['firstName', 'lastName']
} as const;

export const $Zip = {
    type: 'object',
    properties: {
        zip: {
            type: 'string'
        },
        city: {
            type: 'string'
        },
        state: {
            type: 'string'
        }
    },
    required: ['city', 'state', 'zip']
} as const;

export const $Collector = {
    type: 'object',
    properties: {
        socialSecurityNumber: {
            type: 'string'
        },
        firstName: {
            type: 'string'
        },
        lastName: {
            type: 'string'
        },
        interviewDate: {
            type: 'string',
            format: 'date'
        },
        interviewerName: {
            type: 'string'
        },
        areaCode: {
            type: 'string'
        },
        telephoneNumber: {
            type: 'string'
        },
        street: {
            type: 'string'
        },
        zip: {
            type: 'string'
        },
        salesLastYear: {
            type: 'number'
        },
        salesYearToDate: {
            type: 'number'
        },
        collectionArtistId: {
            type: 'integer',
            format: 'int32'
        },
        collectionMedium: {
            type: 'string'
        },
        collectionStyle: {
            type: 'string'
        },
        collectionType: {
            type: 'string'
        }
    },
    required: ['firstName', 'lastName', 'socialSecurityNumber']
} as const;