// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { SignupForMailingListData, SignupForMailingListResponse, GetProfileResponse, UpdateProfileData, UpdateProfileResponse, GetAllCollectorsData, GetAllCollectorsResponse, CreateCollectorData, CreateCollectorResponse, GetCollectorByIdData, GetCollectorByIdResponse, LoginData, LoginResponse, UploadAssetData, UploadAssetResponse, DownloadAssetData, DownloadAssetResponse, DeleteAssetData, DeleteAssetResponse, GetAllArtworksResponse, CreateArtworkData, CreateArtworkResponse, GetArtworkByIdData, GetArtworkByIdResponse, GetAllArtistsData, GetAllArtistsResponse, CreateArtistData, CreateArtistResponse, GetArtistData, GetArtistResponse } from './types.gen';

export class MailingListService {
    /**
     * Sign up for mailing list
     * Add a new potential customer to the mailing list
     * @param data The data for the request.
     * @param data.requestBody
     * @returns string OK
     * @throws ApiError
     */
    public static signupForMailingList(data: SignupForMailingListData): CancelablePromise<SignupForMailingListResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/public/mailing-list/signup',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
}

export class ProfileControllerService {
    /**
     * @returns ProfileResponse OK
     * @throws ApiError
     */
    public static getProfile(): CancelablePromise<GetProfileResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/profile',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ProfileResponse OK
     * @throws ApiError
     */
    public static updateProfile(data: UpdateProfileData): CancelablePromise<UpdateProfileResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/profile',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
}

export class CollectorControllerService {
    /**
     * @param data The data for the request.
     * @param data.q
     * @returns Collector OK
     * @throws ApiError
     */
    public static getAllCollectors(data: GetAllCollectorsData = {}): CancelablePromise<GetAllCollectorsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/collectors',
            query: {
                q: data.q
            },
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Collector OK
     * @throws ApiError
     */
    public static createCollector(data: CreateCollectorData): CancelablePromise<CreateCollectorResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/collectors',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns Collector OK
     * @throws ApiError
     */
    public static getCollectorById(data: GetCollectorByIdData): CancelablePromise<GetCollectorByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/collectors/{id}',
            path: {
                id: data.id
            },
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
}

export class AuthControllerService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns AuthResponse OK
     * @throws ApiError
     */
    public static login(data: LoginData): CancelablePromise<LoginResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/auth/login',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
}

export class AssetControllerService {
    /**
     * @param data The data for the request.
     * @param data.formData
     * @returns AssetResponse OK
     * @throws ApiError
     */
    public static uploadAsset(data: UploadAssetData = {}): CancelablePromise<UploadAssetResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/assets',
            formData: data.formData,
            mediaType: 'multipart/form-data',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns binary OK
     * @throws ApiError
     */
    public static downloadAsset(data: DownloadAssetData): CancelablePromise<DownloadAssetResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/public/assets/{id}',
            path: {
                id: data.id
            },
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown OK
     * @throws ApiError
     */
    public static deleteAsset(data: DeleteAssetData): CancelablePromise<DeleteAssetResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/assets/{id}',
            path: {
                id: data.id
            },
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
}

export class ArtworkControllerService {
    /**
     * @returns ArtworkResponse OK
     * @throws ApiError
     */
    public static getAllArtworks(): CancelablePromise<GetAllArtworksResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/artworks',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ArtworkResponse OK
     * @throws ApiError
     */
    public static createArtwork(data: CreateArtworkData): CancelablePromise<CreateArtworkResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/artworks',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns ArtworkListingResponse OK
     * @throws ApiError
     */
    public static getArtworkById(data: GetArtworkByIdData): CancelablePromise<GetArtworkByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/artworks/{id}',
            path: {
                id: data.id
            },
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
}

export class ArtistControllerService {
    /**
     * @param data The data for the request.
     * @param data.q
     * @returns Artist OK
     * @throws ApiError
     */
    public static getAllArtists(data: GetAllArtistsData = {}): CancelablePromise<GetAllArtistsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/artist',
            query: {
                q: data.q
            },
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns Artist OK
     * @throws ApiError
     */
    public static createArtist(data: CreateArtistData): CancelablePromise<CreateArtistResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/artist',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns Artist OK
     * @throws ApiError
     */
    public static getArtist(data: GetArtistData): CancelablePromise<GetArtistResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/artist/{id}',
            path: {
                id: data.id
            },
            errors: {
                422: 'Unprocessable Entity'
            }
        });
    }
    
}