/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AppExhibitionsImport } from './routes/_app/exhibitions'
import { Route as AppCollectorsImport } from './routes/_app/collectors'
import { Route as AppArtworksImport } from './routes/_app/artworks'
import { Route as AppArtistsImport } from './routes/_app/artists'
import { Route as AppArtworkIdImport } from './routes/_app/artwork/$id'

// Create/Update Routes

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppExhibitionsRoute = AppExhibitionsImport.update({
  id: '/exhibitions',
  path: '/exhibitions',
  getParentRoute: () => AppRoute,
} as any)

const AppCollectorsRoute = AppCollectorsImport.update({
  id: '/collectors',
  path: '/collectors',
  getParentRoute: () => AppRoute,
} as any)

const AppArtworksRoute = AppArtworksImport.update({
  id: '/artworks',
  path: '/artworks',
  getParentRoute: () => AppRoute,
} as any)

const AppArtistsRoute = AppArtistsImport.update({
  id: '/artists',
  path: '/artists',
  getParentRoute: () => AppRoute,
} as any)

const AppArtworkIdRoute = AppArtworkIdImport.update({
  id: '/artwork/$id',
  path: '/artwork/$id',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_app/artists': {
      id: '/_app/artists'
      path: '/artists'
      fullPath: '/artists'
      preLoaderRoute: typeof AppArtistsImport
      parentRoute: typeof AppImport
    }
    '/_app/artworks': {
      id: '/_app/artworks'
      path: '/artworks'
      fullPath: '/artworks'
      preLoaderRoute: typeof AppArtworksImport
      parentRoute: typeof AppImport
    }
    '/_app/collectors': {
      id: '/_app/collectors'
      path: '/collectors'
      fullPath: '/collectors'
      preLoaderRoute: typeof AppCollectorsImport
      parentRoute: typeof AppImport
    }
    '/_app/exhibitions': {
      id: '/_app/exhibitions'
      path: '/exhibitions'
      fullPath: '/exhibitions'
      preLoaderRoute: typeof AppExhibitionsImport
      parentRoute: typeof AppImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/artwork/$id': {
      id: '/_app/artwork/$id'
      path: '/artwork/$id'
      fullPath: '/artwork/$id'
      preLoaderRoute: typeof AppArtworkIdImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppArtistsRoute: typeof AppArtistsRoute
  AppArtworksRoute: typeof AppArtworksRoute
  AppCollectorsRoute: typeof AppCollectorsRoute
  AppExhibitionsRoute: typeof AppExhibitionsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppArtworkIdRoute: typeof AppArtworkIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppArtistsRoute: AppArtistsRoute,
  AppArtworksRoute: AppArtworksRoute,
  AppCollectorsRoute: AppCollectorsRoute,
  AppExhibitionsRoute: AppExhibitionsRoute,
  AppIndexRoute: AppIndexRoute,
  AppArtworkIdRoute: AppArtworkIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppRouteWithChildren
  '/artists': typeof AppArtistsRoute
  '/artworks': typeof AppArtworksRoute
  '/collectors': typeof AppCollectorsRoute
  '/exhibitions': typeof AppExhibitionsRoute
  '/login': typeof AuthLoginRoute
  '/': typeof AppIndexRoute
  '/artwork/$id': typeof AppArtworkIdRoute
}

export interface FileRoutesByTo {
  '/artists': typeof AppArtistsRoute
  '/artworks': typeof AppArtworksRoute
  '/collectors': typeof AppCollectorsRoute
  '/exhibitions': typeof AppExhibitionsRoute
  '/login': typeof AuthLoginRoute
  '/': typeof AppIndexRoute
  '/artwork/$id': typeof AppArtworkIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_app/artists': typeof AppArtistsRoute
  '/_app/artworks': typeof AppArtworksRoute
  '/_app/collectors': typeof AppCollectorsRoute
  '/_app/exhibitions': typeof AppExhibitionsRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_app/': typeof AppIndexRoute
  '/_app/artwork/$id': typeof AppArtworkIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/artists'
    | '/artworks'
    | '/collectors'
    | '/exhibitions'
    | '/login'
    | '/'
    | '/artwork/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/artists'
    | '/artworks'
    | '/collectors'
    | '/exhibitions'
    | '/login'
    | '/'
    | '/artwork/$id'
  id:
    | '__root__'
    | '/_app'
    | '/_app/artists'
    | '/_app/artworks'
    | '/_app/collectors'
    | '/_app/exhibitions'
    | '/_auth/login'
    | '/_app/'
    | '/_app/artwork/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth/login"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/artists",
        "/_app/artworks",
        "/_app/collectors",
        "/_app/exhibitions",
        "/_app/",
        "/_app/artwork/$id"
      ]
    },
    "/_app/artists": {
      "filePath": "_app/artists.tsx",
      "parent": "/_app"
    },
    "/_app/artworks": {
      "filePath": "_app/artworks.tsx",
      "parent": "/_app"
    },
    "/_app/collectors": {
      "filePath": "_app/collectors.tsx",
      "parent": "/_app"
    },
    "/_app/exhibitions": {
      "filePath": "_app/exhibitions.tsx",
      "parent": "/_app"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/artwork/$id": {
      "filePath": "_app/artwork/$id.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
